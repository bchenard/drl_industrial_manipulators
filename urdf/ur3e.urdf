<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /workspaces/airo-ros/ROS/install/ur_description/share/ur_description/urdf/ur.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->

<robot name="ur3e">

    <!-- Base UR robot series xacro macro.
    Main author of the migration to yaml configs Ludovic Delval.
    Contributors to previous versions (in no particular order)
    - Denis Stogl - Lovro Ivanov - Felix Messmer - Kelsey Hawkins - Wim Meeussen - Shaun Edwards - Nadia Hammoudeh Garcia
     - Dave Hershberger - G. vd. Hoorn - Philip Long - Dave Coleman - Miguel Prada - Mathias Luedtke - Marcel Schnirring -
     Felix von Drigalski - Felix Exner - Jimmy Da Silva - Ajit Krisshna N L - Muhammad Asif Rana -->

    <!-- NOTE the macro defined in this file is NOT part of the public API of this package.
     Users CANNOT rely on this file being available, or stored in this location. Nor can they rely on the existence of the macro. -->

    <!-- file creation process
    this file was created to simulate a UR3e in pybullet.

    to create the file:
    1. install the UR drivers for ROS2 galactic and run `ros2 launch ur_description view_ur.launch.py ur_type:=ur3e`.
     see the airo-ros repo for instructions on how to set up ROS. (Note that for "normal" xacro's we would just run the xacro processor, but due the numerous params etc this was not convenient here)
    2. get the resulting URDF description from the robot_state_publisher (in a separate terminal) `ros2 param get /robot_state_publisher robot_description > ur3e.urdf`
    3. remove the <ros_control> part from the URDF
    4. change the mesh paths: copy the meshes for the UR3e to a folder and change the relative paths from this file to the meshes.
    5. add colors (inspired by Google Ravens) (bullet cannot take the colors in .obj or .dae files ... see https://github.com/bulletphysics/bullet3/issues/1934)
    6. add zero mass to all links without collisions as bullet would add mass=1 by default, creating a very heavy EEF (instable)
    -->

    <!-- create link fixed to the "world" -->

    <material name="LightGrey">
        <color rgba="0.8 0.8 0.8 1.0"/>
    </material>

    <material name="DarkGrey">
        <color rgba="0.4 0.4 0.4 1.0"/>
    </material>
    <link name="world"/>
    <link name="base_link"/>
    <inertial>
            <mass value="0.0"/>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
        </inertial>

    <!--link was added to by REP compliant!-->
    <link name="base_link_inertia">
        <visual>
            <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
            <geometry>
                <mesh filename="meshes/visual/base.dae"/>
            </geometry>
            <material name="DarkGrey"/>

        </visual>
        <collision>
            <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
            <geometry>
                <mesh filename="meshes/collision/base.stl"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="2.0"/>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <inertia ixx="0.0030531654454" ixy="0.0" ixz="0.0" iyy="0.0030531654454" iyz="0.0" izz="0.005625"/>
        </inertial>
    </link>
    <link name="shoulder_link">
        <visual>
            <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
            <geometry>
                <mesh filename="meshes/visual/shoulder.dae"/>
            </geometry>
            <material name="DarkGrey"/>

        </visual>
        <collision>
            <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
            <geometry>
                <mesh filename="meshes/collision/shoulder.stl"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="2.0"/>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <inertia ixx="0.008093163429399999" ixy="0.0" ixz="0.0" iyy="0.008093163429399999" iyz="0.0" izz="0.005625"/>
        </inertial>
    </link>
    <link name="upper_arm_link">
        <visual>
            <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.12"/>
            <geometry>
                <mesh filename="meshes/visual/upperarm.dae"/>
            </geometry>
            <material name="LightGrey"/>

        </visual>
        <collision>
            <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.12"/>
            <geometry>
                <mesh filename="meshes/collision/upperarm.stl"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="3.42"/>
            <origin rpy="0 1.5707963267948966 0" xyz="-0.121825 0.0 0.12"/>
            <inertia ixx="0.021728483221103233" ixy="0.0" ixz="0.0" iyy="0.021728483221103233" iyz="0.0" izz="0.00961875"/>
        </inertial>
    </link>
    <link name="forearm_link">
        <visual>
            <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.027"/>
            <geometry>
                <mesh filename="meshes/visual/forearm.dae"/>
            </geometry>
            <material name="LightGrey"/>

        </visual>
        <collision>
            <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.027"/>
            <geometry>
                <mesh filename="meshes/collision/forearm.stl"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="1.26"/>
            <origin rpy="0 1.5707963267948966 0" xyz="-0.1066 0.0 0.027"/>
            <inertia ixx="0.0065445675821719194" ixy="0.0" ixz="0.0" iyy="0.0065445675821719194" iyz="0.0" izz="0.00354375"/>
        </inertial>
    </link>
    <link name="wrist_1_link">
        <visual>
            <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.104"/>
            <geometry>
                <mesh filename="meshes/visual/wrist1.dae"/>
            </geometry>
            <material name="DarkGrey"/>

        </visual>
        <collision>
            <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.104"/>
            <geometry>
                <mesh filename="meshes/collision/wrist1.stl"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="0.8"/>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <inertia ixx="0.002084999166" ixy="0.0" ixz="0.0" iyy="0.002084999166" iyz="0.0" izz="0.00225"/>
        </inertial>
    </link>
    <link name="wrist_2_link">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 -0.08535"/>
            <geometry>
                <mesh filename="meshes/visual/wrist2.dae"/>
            </geometry>
            <material name="DarkGrey"/>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 -0.08535"/>
            <geometry>
                <mesh filename="meshes/collision/wrist2.stl"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="0.8"/>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <inertia ixx="0.002084999166" ixy="0.0" ixz="0.0" iyy="0.002084999166" iyz="0.0" izz="0.00225"/>
        </inertial>
    </link>
    <link name="wrist_3_link">
        <visual>
            <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.0921"/>
            <geometry>
                <mesh filename="meshes/visual/wrist3.dae"/>
            </geometry>
            <material name="DarkGrey"/>

        </visual>
        <collision>
            <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.0921"/>
            <geometry>
                <mesh filename="meshes/collision/wrist3.stl"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="0.35"/>
            <origin rpy="0 0 0" xyz="0.0 0.0 -0.02"/>
            <inertia ixx="0.00013626661215999998" ixy="0.0" ixz="0.0" iyy="0.00013626661215999998" iyz="0.0" izz="0.0001792"/>
        </inertial>
    </link>    <!-- base_joint fixes base_link to the environment -->
    <joint name="base_joint" type="fixed">
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <parent link="world"/>
        <child link="base_link"/>
    </joint>    <!-- joints - main serial chain -->
    <joint name="base_link-base_link_inertia" type="fixed">
        <parent link="base_link"/>
        <child link="base_link_inertia"/>
        <!-- 'base_link' is REP-103 aligned (so X+ forward), while the internal frames of the robot/controller have X+ pointing backwards. Use the joint between 'base_link' and 'base_link_inertia' (a dummy link/frame) to introduce the necessary rotation over Z (of pi rad). -->
        <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
    </joint>
    <joint name="shoulder_pan_joint" type="revolute">
        <parent link="base_link_inertia"/>
        <child link="shoulder_link"/>
        <origin rpy="0 0 0" xyz="0 0 0.15185"/>
        <axis xyz="0 0 1"/>
        <limit effort="56.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="3.141592653589793"/>
        <safety_controller k_position="20" k_velocity="0.0" soft_lower_limit="-6.133185307179586" soft_upper_limit="6.133185307179586"/>
        <dynamics damping="0" friction="0"/>
    </joint>
    <joint name="shoulder_lift_joint" type="revolute">
        <parent link="shoulder_link"/>
        <child link="upper_arm_link"/>
        <origin rpy="1.570796327 0 0" xyz="0 0 0"/>
        <axis xyz="0 0 1"/>
        <limit effort="56.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="3.141592653589793"/>
        <safety_controller k_position="20" k_velocity="0.0" soft_lower_limit="-6.133185307179586" soft_upper_limit="6.133185307179586"/>
        <dynamics damping="0" friction="0"/>
    </joint>
    <joint name="elbow_joint" type="revolute">
        <parent link="upper_arm_link"/>
        <child link="forearm_link"/>
        <origin rpy="0 0 0" xyz="-0.24355 0 0"/>
        <axis xyz="0 0 1"/>
        <limit effort="28.0" lower="-3.141592653589793" upper="3.141592653589793" velocity="3.141592653589793"/>
        <safety_controller k_position="20" k_velocity="0.0" soft_lower_limit="-2.991592653589793" soft_upper_limit="2.991592653589793"/>
        <dynamics damping="0" friction="0"/>
    </joint>
    <joint name="wrist_1_joint" type="revolute">
        <parent link="forearm_link"/>
        <child link="wrist_1_link"/>
        <origin rpy="0 0 0" xyz="-0.2132 0 0.13105"/>
        <axis xyz="0 0 1"/>
        <limit effort="12.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="6.283185307179586"/>
        <safety_controller k_position="20" k_velocity="0.0" soft_lower_limit="-6.133185307179586" soft_upper_limit="6.133185307179586"/>
        <dynamics damping="0" friction="0"/>
    </joint>
    <joint name="wrist_2_joint" type="revolute">
        <parent link="wrist_1_link"/>
        <child link="wrist_2_link"/>
        <origin rpy="1.570796327 0 0" xyz="0 -0.08535 -1.750557762378351e-11"/>
        <axis xyz="0 0 1"/>
        <limit effort="12.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="6.283185307179586"/>
        <safety_controller k_position="20" k_velocity="0.0" soft_lower_limit="-6.133185307179586" soft_upper_limit="6.133185307179586"/>
        <dynamics damping="0" friction="0"/>
    </joint>
    <joint name="wrist_3_joint" type="revolute">
        <parent link="wrist_2_link"/>
        <child link="wrist_3_link"/>
        <origin rpy="1.570796326589793 3.141592653589793 3.141592653589793" xyz="0 0.0921 -1.8890025766262e-11"/>
        <axis xyz="0 0 1"/>
        <limit effort="12.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="6.283185307179586"/>
        <safety_controller k_position="20" k_velocity="0.0" soft_lower_limit="-6.133185307179586" soft_upper_limit="6.133185307179586"/>
        <dynamics damping="0" friction="0"/>
    </joint>    <!-- ROS-Industrial 'base' frame - base_link to UR 'Base' Coordinates transform -->
    <link name="base"/>
    <joint name="base_link-base_fixed_joint" type="fixed">        <!-- Note the rotation over Z of pi radians - as base_link is REP-103 aligned (i.e., has X+ forward, Y+ left and Z+ up), this is needed to correctly align 'base' with the 'Base' coordinate system of the UR controller. -->
        <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
        <parent link="base_link"/>
        <child link="base"/>
    </joint>    <!-- ROS-Industrial 'flange' frame - attachment point for EEF models -->
    <link name="flange">
        <inertial>
            <mass value="0.0"/>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
        </inertial>
    </link>
    <joint name="wrist_3-flange" type="fixed">
        <parent link="wrist_3_link"/>
        <child link="flange"/>
        <origin rpy="0 -1.5707963267948966 -1.5707963267948966" xyz="0 0 0"/>
    </joint>    <!-- ROS-Industrial 'tool0' frame - all-zeros tool frame -->
    <link name="tool0">
        <inertial>
            <mass value="0.0"/>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
        </inertial>
    </link>
    <joint name="flange-tool0" type="fixed">        <!-- default toolframe - X+ left, Y+ up, Z+ front -->
        <origin rpy="1.5707963267948966 0 1.5707963267948966" xyz="0 0 0"/>
        <parent link="flange"/>
        <child link="tool0"/>
    </joint>
</robot>
